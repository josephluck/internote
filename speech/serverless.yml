service: internote-speech-service

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: services.internote.app
    dev: dev-services.internote.app
  webpack:
    config: "webpack.config.js"
    includeModules:
      forceExclude:
        - aws-sdk
    packager: "yarn"
  # customDomain:
  #   basePath: ""
  #   domainName: ${self:custom.domains.${self:custom.stage}}
  #   certificateName: "internote.app"
  #   stage: "${self:custom.stage}"
  #   createRoute53Record: true
  #   endpointType: "regional"
  bucketName: internote-${self:custom.stage}-services-speech-audio-files

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  environment:
    REGION: eu-west-1
    SPEECH_BUCKET:
      Ref: SpeechAudioFilesBucket
  memorySize: 256
  timeout: 30
  apiGateway:
    minimumCompressionSize: 1024
    restApiId:
      "Fn::ImportValue": ${self:custom.stage}-ApiGatewayRestApiId
    restApiRootResourceId:
      "Fn::ImportValue": ${self:custom.stage}-ApiGatewayRestApiRootResourceId
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - Ref: SpeechAudioFilesBucket
            - "/*"
    - Effect: "Allow"
      Action:
        - "polly:*"
      Resource: "*"

plugins:
  - serverless-plugin-monorepo
  - serverless-webpack

functions:
  speech:
    handler: speech.handler
    events:
      - http:
          path: speech
          method: post
          cors: true
          authorizer: aws_iam

resources:
  Resources:
    SpeechAudioFilesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000
  Outputs:
    SpeechAudioFilesBucketArn:
      Value:
        Fn::GetAtt:
          - SpeechAudioFilesBucket
          - Arn
      Export:
        Name: ${self:custom.stage}-SpeechAudioFilesBucketArn

    SpeechAudioFilesBucketName:
      Value:
        Ref: SpeechAudioFilesBucket
      Export:
        Name: ${self:custom.stage}-SpeechAudioFilesBucket
