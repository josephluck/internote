service: internote-ui

# functions:
# serve-service-worker:
#   handler: service-worker/lambda.handler
#   events:
#     - http:
#         path: /
#         method: get

plugins:
  - serverless-plugin-monorepo
  - serverless-plugin-include-dependencies
  - serverless-domain-manager
  - serverless-nextjs-plugin

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: internote.app
    dev: dev.internote.app
  customDomain:
    basePath: ""
    domainName: ${self:custom.domains.${self:custom.stage}}
    certificateName: "internote.app"
    stage: "${self:custom.stage}"
    createRoute53Record: true
    endpointType: "regional"
  serverless-nextjs:
    createAssetBucket: false # TODO: PR to https://github.com/danielcondemarin/serverless-nextjs-plugin to check for existence of bucket before creating it

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  memorySize: 256
  timeout: 30
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    STAGE: ${self:custom.stage}
# resources:
#   Resources:
# InternoteUiStaticBucket:
#   Type: AWS::S3::Bucket
#   Properties:
#     BucketName: "internote-${self:custom.stage}-ui-static"
#     AccessControl: PublicRead
# InternoteUiStaticBucketPolicy:
#   Type: AWS::S3::BucketPolicy
#   Properties:
#     Bucket:
#       Ref: InternoteUiStaticBucket
#     PolicyDocument:
#       Statement:
#         - Sid: PublicReadGetObject
#           Effect: Allow
#           Principal: "*"
#           Action:
#             - s3:GetObject
#           Resource: arn:aws:s3:::internote-${self:custom.stage}-ui-static/*
