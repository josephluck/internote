{
  "service": {
    "service": "internote-auth-service",
    "serviceObject": {
      "name": "internote-auth-service"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "region": "eu-west-1",
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "restApiId": {
          "Fn::ImportValue": "dev-ApiGatewayRestApiId"
        },
        "restApiRootResourceId": {
          "Fn::ImportValue": "dev-ApiGatewayRestApiRootResourceId"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "ses:SendEmail"
          ],
          "Resource": [
            "arn:aws:ses:eu-west-1:*:*"
          ]
        }
      ],
      "environment": {
        "SES_FROM_ADDRESS": "no-reply@internote.app"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "AuthPreSignUpLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/internote-auth-service-dev-authPreSignUp"
            }
          },
          "DefineAuthChallengeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/internote-auth-service-dev-defineAuthChallenge"
            }
          },
          "CreateAuthChallengeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/internote-auth-service-dev-createAuthChallenge"
            }
          },
          "VerifyAuthChallengeResponseLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/internote-auth-service-dev-verifyAuthChallengeResponse"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "internote-auth-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/internote-auth-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/internote-auth-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "internote-auth-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AuthPreSignUpLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/internote-auth-service/dev/1568373063472-2019-09-13T11:11:03.472Z/internote-auth-service.zip"
              },
              "FunctionName": "internote-auth-service-dev-authPreSignUp",
              "Handler": "pre-sign-up.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SES_FROM_ADDRESS": "no-reply@internote.app"
                }
              }
            },
            "DependsOn": [
              "AuthPreSignUpLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AuthPreSignUpLambdaVersionifv70Osfbf4cC4t0JIYPNYJyi7sy4zFZqS0wFAQaO0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthPreSignUpLambdaFunction"
              },
              "CodeSha256": "4MppYJ22n4+IS7mmK/0GVK/nUPRu7LqNiDQxPlEd8FQ="
            }
          },
          "DefineAuthChallengeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/internote-auth-service/dev/1568373063472-2019-09-13T11:11:03.472Z/internote-auth-service.zip"
              },
              "FunctionName": "internote-auth-service-dev-defineAuthChallenge",
              "Handler": "define-auth-challenge.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SES_FROM_ADDRESS": "no-reply@internote.app"
                }
              }
            },
            "DependsOn": [
              "DefineAuthChallengeLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DefineAuthChallengeLambdaVersionu9ApdtRuVTS5WnjVaCr1ErbA9o1YQ8zSnsYs82z687o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DefineAuthChallengeLambdaFunction"
              },
              "CodeSha256": "4MppYJ22n4+IS7mmK/0GVK/nUPRu7LqNiDQxPlEd8FQ="
            }
          },
          "CreateAuthChallengeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/internote-auth-service/dev/1568373063472-2019-09-13T11:11:03.472Z/internote-auth-service.zip"
              },
              "FunctionName": "internote-auth-service-dev-createAuthChallenge",
              "Handler": "create-auth-challenge.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SES_FROM_ADDRESS": "no-reply@internote.app"
                }
              }
            },
            "DependsOn": [
              "CreateAuthChallengeLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CreateAuthChallengeLambdaVersionlfV8jld3WiQK51rD5nXewGlJnaaAqZD8E0XN5YgFVQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateAuthChallengeLambdaFunction"
              },
              "CodeSha256": "4MppYJ22n4+IS7mmK/0GVK/nUPRu7LqNiDQxPlEd8FQ="
            }
          },
          "VerifyAuthChallengeResponseLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/internote-auth-service/dev/1568373063472-2019-09-13T11:11:03.472Z/internote-auth-service.zip"
              },
              "FunctionName": "internote-auth-service-dev-verifyAuthChallengeResponse",
              "Handler": "verify-auth-challenge-response.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SES_FROM_ADDRESS": "no-reply@internote.app"
                }
              }
            },
            "DependsOn": [
              "VerifyAuthChallengeResponseLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "VerifyAuthChallengeResponseLambdaVersionhKufbfYM5pPRFA3WfmqJfsjizwivuOAGVnlpGyubU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "VerifyAuthChallengeResponseLambdaFunction"
              },
              "CodeSha256": "4MppYJ22n4+IS7mmK/0GVK/nUPRu7LqNiDQxPlEd8FQ="
            }
          },
          "CognitoUserPoolCognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "dev-internote-user-pool",
              "LambdaConfig": {
                "PreSignUp": {
                  "Fn::GetAtt": [
                    "AuthPreSignUpLambdaFunction",
                    "Arn"
                  ]
                },
                "DefineAuthChallenge": {
                  "Fn::GetAtt": [
                    "DefineAuthChallengeLambdaFunction",
                    "Arn"
                  ]
                },
                "CreateAuthChallenge": {
                  "Fn::GetAtt": [
                    "CreateAuthChallengeLambdaFunction",
                    "Arn"
                  ]
                },
                "VerifyAuthChallengeResponse": {
                  "Fn::GetAtt": [
                    "VerifyAuthChallengeResponseLambdaFunction",
                    "Arn"
                  ]
                }
              },
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 8,
                  "RequireLowercase": false,
                  "RequireNumbers": false,
                  "RequireSymbols": false,
                  "RequireUppercase": false
                }
              },
              "UsernameAttributes": [
                "email"
              ],
              "MfaConfiguration": "OFF"
            },
            "DependsOn": [
              "AuthPreSignUpLambdaFunction",
              "DefineAuthChallengeLambdaFunction",
              "CreateAuthChallengeLambdaFunction",
              "VerifyAuthChallengeResponseLambdaFunction"
            ]
          },
          "AuthPreSignUpLambdaPermissionCognitoUserPoolCognitoUserPoolTriggerSourcePreSignUp": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthPreSignUpLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolCognitoUserPool",
                  "Arn"
                ]
              }
            }
          },
          "DefineAuthChallengeLambdaPermissionCognitoUserPoolCognitoUserPoolTriggerSourceDefineAuthChallenge": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DefineAuthChallengeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolCognitoUserPool",
                  "Arn"
                ]
              }
            }
          },
          "CreateAuthChallengeLambdaPermissionCognitoUserPoolCognitoUserPoolTriggerSourceCreateAuthChallenge": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateAuthChallengeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolCognitoUserPool",
                  "Arn"
                ]
              }
            }
          },
          "VerifyAuthChallengeResponseLambdaPermissionCognitoUserPoolCognitoUserPoolTriggerSourceVerifyAuthChallengeResponse": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "VerifyAuthChallengeResponseLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "cognito-idp.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CognitoUserPoolCognitoUserPool",
                  "Arn"
                ]
              }
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "dev-internote-user-pool-client",
              "UserPoolId": {
                "Ref": "CognitoUserPoolCognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "CUSTOM_AUTH_FLOW_ONLY"
              ],
              "GenerateSecret": false
            }
          },
          "CognitoAuthRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "Path": "/",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": "cognito-identity.amazonaws.com"
                    },
                    "Action": [
                      "sts:AssumeRoleWithWebIdentity"
                    ],
                    "Condition": {
                      "StringEquals": {
                        "cognito-identity.amazonaws.com:aud": {
                          "Ref": "CognitoIdentityPool"
                        }
                      },
                      "ForAnyValue:StringLike": {
                        "cognito-identity.amazonaws.com:amr": "authenticated"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "CognitoAuthorizedPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "mobileanalytics:PutEvents",
                          "cognito-sync:*",
                          "cognito-identity:*"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:Invoke"
                        ],
                        "Resource": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:execute-api:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":",
                              {
                                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
                              },
                              "/*"
                            ]
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*"
                        ],
                        "Resource": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::ImportValue": "dev-AttachmentsBucketArn"
                                },
                                "/private/",
                                "$",
                                "{cognito-identity.amazonaws.com:sub}/*"
                              ]
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*"
                        ],
                        "Resource": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::ImportValue": "dev-SpeechAudioFilesBucketArn"
                                },
                                "/private/",
                                "$",
                                "{cognito-identity.amazonaws.com:sub}/*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CognitoIdentityPool": {
            "Type": "AWS::Cognito::IdentityPool",
            "Properties": {
              "IdentityPoolName": "devInternoteIdentityPool",
              "AllowUnauthenticatedIdentities": false,
              "CognitoIdentityProviders": [
                {
                  "ClientId": {
                    "Ref": "CognitoUserPoolClient"
                  },
                  "ProviderName": {
                    "Fn::GetAtt": [
                      "CognitoUserPoolCognitoUserPool",
                      "ProviderName"
                    ]
                  }
                }
              ]
            }
          },
          "CognitoIdentityPoolRoles": {
            "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
            "Properties": {
              "IdentityPoolId": {
                "Ref": "CognitoIdentityPool"
              },
              "Roles": {
                "authenticated": {
                  "Fn::GetAtt": [
                    "CognitoAuthRole",
                    "Arn"
                  ]
                }
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "AuthPreSignUpLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthPreSignUpLambdaVersionifv70Osfbf4cC4t0JIYPNYJyi7sy4zFZqS0wFAQaO0"
            }
          },
          "DefineAuthChallengeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DefineAuthChallengeLambdaVersionu9ApdtRuVTS5WnjVaCr1ErbA9o1YQ8zSnsYs82z687o"
            }
          },
          "CreateAuthChallengeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateAuthChallengeLambdaVersionlfV8jld3WiQK51rD5nXewGlJnaaAqZD8E0XN5YgFVQ"
            }
          },
          "VerifyAuthChallengeResponseLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "VerifyAuthChallengeResponseLambdaVersionhKufbfYM5pPRFA3WfmqJfsjizwivuOAGVnlpGyubU"
            }
          },
          "UserPoolId": {
            "Value": {
              "Ref": "CognitoUserPoolCognitoUserPool"
            }
          },
          "UserPoolClientId": {
            "Value": {
              "Ref": "CognitoUserPoolClient"
            }
          },
          "IdentityPoolId": {
            "Value": {
              "Ref": "CognitoIdentityPool"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "webpack": {
        "config": "webpack.config.js",
        "includeModules": {
          "forceExclude": [
            "aws-sdk"
          ]
        }
      }
    },
    "plugins": [
      "serverless-plugin-monorepo",
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "authPreSignUp": {
        "handler": "pre-sign-up.handler",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "CognitoUserPool",
              "trigger": "PreSignUp"
            }
          }
        ],
        "name": "internote-auth-service-dev-authPreSignUp",
        "package": {
          "artifact": ".serverless/internote-auth-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "defineAuthChallenge": {
        "handler": "define-auth-challenge.handler",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "CognitoUserPool",
              "trigger": "DefineAuthChallenge"
            }
          }
        ],
        "name": "internote-auth-service-dev-defineAuthChallenge",
        "package": {
          "artifact": ".serverless/internote-auth-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "createAuthChallenge": {
        "handler": "create-auth-challenge.handler",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "CognitoUserPool",
              "trigger": "CreateAuthChallenge"
            }
          }
        ],
        "name": "internote-auth-service-dev-createAuthChallenge",
        "package": {
          "artifact": ".serverless/internote-auth-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "verifyAuthChallengeResponse": {
        "handler": "verify-auth-challenge-response.handler",
        "events": [
          {
            "cognitoUserPool": {
              "pool": "CognitoUserPool",
              "trigger": "VerifyAuthChallengeResponse"
            }
          }
        ],
        "name": "internote-auth-service-dev-verifyAuthChallengeResponse",
        "package": {
          "artifact": ".serverless/internote-auth-service.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "CognitoUserPoolCognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "dev-internote-user-pool",
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireLowercase": false,
                "RequireNumbers": false,
                "RequireSymbols": false,
                "RequireUppercase": false
              }
            },
            "UsernameAttributes": [
              "email"
            ],
            "MfaConfiguration": "OFF"
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "dev-internote-user-pool-client",
            "UserPoolId": {
              "Ref": "CognitoUserPoolCognitoUserPool"
            },
            "ExplicitAuthFlows": [
              "CUSTOM_AUTH_FLOW_ONLY"
            ],
            "GenerateSecret": false
          }
        },
        "CognitoAuthRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "Path": "/",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": "cognito-identity.amazonaws.com"
                  },
                  "Action": [
                    "sts:AssumeRoleWithWebIdentity"
                  ],
                  "Condition": {
                    "StringEquals": {
                      "cognito-identity.amazonaws.com:aud": {
                        "Ref": "CognitoIdentityPool"
                      }
                    },
                    "ForAnyValue:StringLike": {
                      "cognito-identity.amazonaws.com:amr": "authenticated"
                    }
                  }
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "CognitoAuthorizedPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "mobileanalytics:PutEvents",
                        "cognito-sync:*",
                        "cognito-identity:*"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "execute-api:Invoke"
                      ],
                      "Resource": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Fn::ImportValue": "dev-ApiGatewayRestApiId"
                            },
                            "/*"
                          ]
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:*"
                      ],
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::ImportValue": "dev-AttachmentsBucketArn"
                              },
                              "/private/",
                              "$",
                              "{cognito-identity.amazonaws.com:sub}/*"
                            ]
                          ]
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:*"
                      ],
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::ImportValue": "dev-SpeechAudioFilesBucketArn"
                              },
                              "/private/",
                              "$",
                              "{cognito-identity.amazonaws.com:sub}/*"
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "CognitoIdentityPool": {
          "Type": "AWS::Cognito::IdentityPool",
          "Properties": {
            "IdentityPoolName": "devInternoteIdentityPool",
            "AllowUnauthenticatedIdentities": false,
            "CognitoIdentityProviders": [
              {
                "ClientId": {
                  "Ref": "CognitoUserPoolClient"
                },
                "ProviderName": {
                  "Fn::GetAtt": [
                    "CognitoUserPoolCognitoUserPool",
                    "ProviderName"
                  ]
                }
              }
            ]
          }
        },
        "CognitoIdentityPoolRoles": {
          "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
          "Properties": {
            "IdentityPoolId": {
              "Ref": "CognitoIdentityPool"
            },
            "Roles": {
              "authenticated": {
                "Fn::GetAtt": [
                  "CognitoAuthRole",
                  "Arn"
                ]
              }
            }
          }
        }
      },
      "Outputs": {
        "UserPoolId": {
          "Value": {
            "Ref": "CognitoUserPoolCognitoUserPool"
          }
        },
        "UserPoolClientId": {
          "Value": {
            "Ref": "CognitoUserPoolClient"
          }
        },
        "IdentityPoolId": {
          "Value": {
            "Ref": "CognitoIdentityPool"
          }
        }
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/internote-auth-service/dev/1568373063472-2019-09-13T11:11:03.472Z",
    "artifact": ""
  }
}