{
  "service": {
    "service": "internote-export-service",
    "serviceObject": {
      "name": "internote-export-service"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "region": "eu-west-1",
      "environment": {
        "REGION": "eu-west-1",
        "EXPORT_BUCKET": {
          "Ref": "ExportFilesBucket"
        }
      },
      "memorySize": 256,
      "timeout": 30,
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "restApiId": {
          "Fn::ImportValue": "dev-ApiGatewayRestApiId"
        },
        "restApiRootResourceId": {
          "Fn::ImportValue": "dev-ApiGatewayRestApiRootResourceId"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:PutObjectAcl"
          ],
          "Resource": {
            "Fn::Join": [
              "",
              [
                "arn:aws:s3:::",
                {
                  "Ref": "ExportFilesBucket"
                },
                "/*"
              ]
            ]
          }
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "MarkdownLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/internote-export-service-dev-markdown"
            }
          },
          "HtmlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/internote-export-service-dev-html"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "internote-export-service",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/internote-export-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/internote-export-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "internote-export-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "MarkdownLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/internote-export-service/dev/1568373120709-2019-09-13T11:12:00.709Z/internote-export-service.zip"
              },
              "FunctionName": "internote-export-service-dev-markdown",
              "Handler": "markdown.handler",
              "MemorySize": 256,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "REGION": "eu-west-1",
                  "EXPORT_BUCKET": {
                    "Ref": "ExportFilesBucket"
                  }
                }
              }
            },
            "DependsOn": [
              "MarkdownLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "MarkdownLambdaVersionnJeLxdpL7hwsMlEmHoOVj39pFdIC9chtxEbqEGlXM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MarkdownLambdaFunction"
              },
              "CodeSha256": "r3SOguqcl3HwLm90E5Kv88x/3591Av3NNJZKjgJoUZ8="
            }
          },
          "HtmlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/internote-export-service/dev/1568373120709-2019-09-13T11:12:00.709Z/internote-export-service.zip"
              },
              "FunctionName": "internote-export-service-dev-html",
              "Handler": "html.handler",
              "MemorySize": 256,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "REGION": "eu-west-1",
                  "EXPORT_BUCKET": {
                    "Ref": "ExportFilesBucket"
                  }
                }
              }
            },
            "DependsOn": [
              "HtmlLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HtmlLambdaVersionlLz8l6BK8AFA3vsKdi2GXEepZZ2EOCY0QZ8r4WO8A0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HtmlLambdaFunction"
              },
              "CodeSha256": "r3SOguqcl3HwLm90E5Kv88x/3591Av3NNJZKjgJoUZ8="
            }
          },
          "ApiGatewayResourceExport": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiRootResourceId"
              },
              "PathPart": "export",
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceExportMarkdown": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceExport"
              },
              "PathPart": "markdown",
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceExportHtml": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceExport"
              },
              "PathPart": "html",
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodExportMarkdownOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceExportMarkdown"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodExportHtmlOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceExportHtml"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodExportMarkdownPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceExportMarkdown"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "AWS_IAM",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MarkdownLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodExportHtmlPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceExportHtml"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "AWS_IAM",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HtmlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1568373106542": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Fn::ImportValue": "dev-ApiGatewayRestApiId"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodExportMarkdownOptions",
              "ApiGatewayMethodExportHtmlOptions",
              "ApiGatewayMethodExportMarkdownPost",
              "ApiGatewayMethodExportHtmlPost"
            ]
          },
          "MarkdownLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MarkdownLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Fn::ImportValue": "dev-ApiGatewayRestApiId"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HtmlLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HtmlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Fn::ImportValue": "dev-ApiGatewayRestApiId"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ExportFilesBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "internote-dev-services-export-files",
              "AccessControl": "PublicRead"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "MarkdownLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MarkdownLambdaVersionnJeLxdpL7hwsMlEmHoOVj39pFdIC9chtxEbqEGlXM"
            }
          },
          "HtmlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HtmlLambdaVersionlLz8l6BK8AFA3vsKdi2GXEepZZ2EOCY0QZ8r4WO8A0"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::ImportValue": "dev-ApiGatewayRestApiId"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "domains": {
        "prod": "services.internote.app",
        "dev": "dev-services.internote.app"
      },
      "webpack": {
        "config": "webpack.config.js",
        "includeModules": {
          "forceExclude": [
            "aws-sdk"
          ]
        },
        "packager": "yarn"
      },
      "customDomain": {
        "basePath": "",
        "domainName": "dev-services.internote.app",
        "certificateName": "internote.app",
        "stage": "dev",
        "createRoute53Record": true,
        "endpointType": "regional"
      },
      "bucketName": "internote-dev-services-export-files"
    },
    "plugins": [
      "serverless-plugin-monorepo",
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "markdown": {
        "handler": "markdown.handler",
        "events": [
          {
            "http": {
              "path": "export/markdown",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "AWS_IAM",
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "internote-export-service-dev-markdown",
        "package": {
          "artifact": ".serverless/internote-export-service.zip"
        },
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "html": {
        "handler": "html.handler",
        "events": [
          {
            "http": {
              "path": "export/html",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "AWS_IAM",
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "internote-export-service-dev-html",
        "package": {
          "artifact": ".serverless/internote-export-service.zip"
        },
        "memory": 256,
        "timeout": 30,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "ExportFilesBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "internote-dev-services-export-files",
            "AccessControl": "PublicRead"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/internote-export-service/dev/1568373120709-2019-09-13T11:12:00.709Z",
    "artifact": ""
  }
}